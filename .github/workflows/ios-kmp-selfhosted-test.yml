name: iOS KMP Self-hosted Test

on:
  workflow_call:
    inputs:
      use_git_lfs:
        description: Whether to download Git-LFS files.
        type: boolean
        required: false
        default: false
      custom_values:
        description: "Custom string that can contains values specified in your workflow file. Those values will be placed into environment variable. Example: \"CUSTOM-1: 1; CUSTOM-2: 2\""
        type: string
        required: false
      timeout_minutes:
        description: "Job timeout in minutes"
        type: number
        required: false
        default: 30
      kmp_swift_package_integration:
        description: "Whether KMP is integrated in Xcode project as a Swift Package"
        type: boolean
        required: false
        default: false
      kmp_swift_package_path:
        description: "If `swift_package_integration` is 'true', then specifies a location of local Swift Package with Makefile. Example: 'iosApp/shared/KMP`"
        type: string
        required: false
        default: iosApp/shared/KMP
      kmp_swift_package_flavor:
        description: "Build flavor of KMP Package"
        type: string
        default: dev
        required: false

    secrets:
      GRADLE_CACHE_ENCRYPTION_KEY:
        required: false
        description: "Configuration cache encryption key"

jobs:
  test:
    name: Test
    runs-on: self-hosted
    timeout-minutes: ${{ inputs.timeout_minutes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: ${{ inputs.use_git_lfs }}
          fetch-depth: 0
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          cache-encryption-key: ${{ secrets.GRADLE_CACHE_ENCRYPTION_KEY }}
      - name: Build KMP Package
        if: ${{ inputs.kmp_swift_package_integration }}
        env:
          KMP_BUILD_FLAVOR: ${{ inputs.kmp_swift_package_flavor }}
          KMP_FRAMEWORK_BUILD_TYPE: debug
        run: |
          cd ${{ inputs.kmp_swift_package_path }}
          make build
      - name: Fastlane Test
        working-directory: iosApp
        run: |
          gem install bundler
          bundle install --jobs 4 --retry 3
          bundle exec fastlane test
        env:
          DANGER_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CUSTOM_VALUES: ${{ inputs.custom_values }}
