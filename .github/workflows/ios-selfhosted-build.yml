name: Self-hosted Build

on:
  workflow_call:
    inputs:
      use_git_lfs:
        description: Whether to download Git-LFS files.
        type: boolean
        required: false
        default: false
      custom_values:
        description: "Custom string that can contains values specified in your workflow file. Those values will be placed into environment variable. Example: \"CUSTOM-1: 1; CUSTOM-2: 2\""
        type: string
        required: false
      runner_label:
        description: 'The custom label for the self-hosted runner to use for the build job.'
        type: string
        required: false
        default: 'self-hosted' # Default if you don't specify a particular runner

      changelog_debug:
        description: Enable debug mode for changelog generation. Default is false.
        type: boolean
        required: false
        default: false
      changelog_depth:
        description: The depth of the git history to fetch for changelog generation. Default is 100.
        type: number
        required: false
        default: 100
    secrets:
      MATCH_PASSWORD:
        required: true
        description: >
          Password for decrypting of certificates and provisioning profiles.
      APP_STORE_CONNECT_API_KEY_KEY:
        required: true
        description: >
          Private App Store Connect API key for submitting build to App Store.
      APP_STORE_CONNECT_API_KEY_KEY_ID:
        required: true
        description: >
          Private App Store Connect API key for submitting build to App Store.
      APP_STORE_CONNECT_API_KEY_ISSUER_ID:
        required: true
        description: >
          Private App Store Connect API issuer key for submitting build to App Store.

jobs:
  detect_changes_and_generate_changelog:
    name: Detect changes and generate changelog
    uses: ./.github/workflows/universal-detect-changes-and-generate-changelog.yml
    with:
      depth: ${{ inputs.changelog_depth }}
      debug: ${{ inputs.changelog_debug }}

  build:
    runs-on: ${{ fromJson(format('["self-hosted", "{0}"]', inputs.runner_label)) }}
    timeout-minutes: 30
    needs: detect_changes_and_generate_changelog
    if: ${{ needs.detect_changes_and_generate_changelog.outputs.skip_build != 'true' }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        lfs: ${{ inputs.use_git_lfs }}
    - name: Fastlane Beta
      run: |
        gem install bundler
        bundle install --jobs 4 --retry 3
        bundle exec fastlane beta
      env:
        MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
        PR_TITLE: ${{ github.event.pull_request.title }}
        APP_STORE_CONNECT_API_KEY_KEY: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY }}
        APP_STORE_CONNECT_API_KEY_KEY_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_KEY_ID }}
        APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.APP_STORE_CONNECT_API_KEY_ISSUER_ID }}
        CUSTOM_VALUES: ${{ inputs.custom_values }}
    - name: Upload IPA
      uses: actions/upload-artifact@v4
      with:
        name: Build.ipa
        path: build_output/*.ipa
    - name: Upload dSYM
      uses: actions/upload-artifact@v4
      with:
        name: Build.app.dSYM.zip
        path: build_output/*.app.dSYM.zip
    - name: Save latest build commit
      run: |
        echo "${{ github.sha }}" > latest_builded_commit.txt
    - name: Store lastest build commit
      id: get_last_build_commit
      uses: actions/cache@v4
      with:
        path: latest_builded_commit.txt
        key: latest_builded_commit-${{github.run_number}}
