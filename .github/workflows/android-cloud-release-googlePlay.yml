name: Android Release to Firebase App Distribution

on:
  workflow_call:
    inputs:
      ## Required Inputs
      VERSION_NAME:
        description: "Release version name"
        required: true
        type: string
      BUILD_NUMBER_OFFSET:
        description: "Build number offset. This number will be added to GITHUB_RUN_NUMBER and can be used to make corrections to build numbers."
        required: true
        type: number
      BUNDLE_GRADLE_TASK:
        description: "A Gradle task for assembling app bundle, for example `bundleRelease`"
        required: true
        type: string
      SIGNING_KEYSTORE_PATH:
        description: "Path to keystore for signing of universal APK. Example: `keystore/debug.jks' or 'androidApp/signing/debug.keystore'."
        required: true
        type: string
      GOOGLE_PLAY_APPLICATION_ID:
        description: "Google Play applicationId"
        required: true
        type: string
      GOOGLE_PLAY_WHATSNEW_DIRECTORY:
        description: "Path to directory with changelog files"
        required: true
        type: string

      ## Optional Inputs
      KMP_FLAVOR:
        description: "KMP Build flavor. This is optional and only required by KMP projects and can be ignored on pure Android projects"
        required: false
        type: string
        default: 'test'
      CHANGES_NOT_SENT_FOR_REVIEW:
        description: 'A changesNotSentForReview Google Play flag. Enable when last google review failed, disable when last review was successful.'
        type: boolean
        required: false
        default: false
      TIMEOUT_MINUTES:
        description: "Job timeout in minutes"
        required: false
        type: number
        default: 30
      JAVA_VERSION:
        description: "Java version to use"
        required: false
        type: string
        default: '17'
      JAVA_DISTRIBUTION:
        description: "Java distribution to use"
        required: false
        type: string
        default: 'zulu'

    secrets:
      SIGNING_KEYSTORE_PASSWORD:
        description: "Password to provided keystore"
        required: true
      SIGNING_KEY_ALIAS:
        description: "Alias of the signing key in the provided keystore"
        required: true
      SIGNING_KEY_PASSWORD:
        description: "Password to the key in the provided keystore"
        required: true
      GOOGLE_PLAY_PUBLISH_SERVICE_ACCOUNT:
        required: true
        description: 'Google Play service account JSON'

jobs:
  build:
    name: Release Build
    runs-on: [ ubuntu-latest ]
    timeout-minutes: ${{ inputs.TIMEOUT_MINUTES }}
    env:
      EXCLUDE_AAB_FILTER: .*intermediate
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: ${{ inputs.JAVA_VERSION }}
          distribution: ${{ inputs.JAVA_DISTRIBUTION }}
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
      - name: Prepare Environment
        run: |
          echo "BUILD_NUMBER=$((GITHUB_RUN_NUMBER + ${{ inputs.BUILD_NUMBER_OFFSET}} ))" >> $GITHUB_ENV
          echo "VERSION_NAME=${{ inputs.VERSION_NAME }}" >> $GITHUB_ENV
          echo "KMP_FLAVOR=${{ inputs.KMP_FLAVOR }}" >> $GITHUB_ENV
      - name: Generate Artifacts (AAB)
        id: artifacts
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.SIGNING_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
        shell: bash
        run: |
          ./gradlew ${{ inputs.BUNDLE_GRADLE_TASK }} -P buildkonfig.flavor=$KMP_FLAVOR
          BUNDLE_FILE=$(find . -name '*.aab' | grep -v '.*intermediate')
          MAPPING_FILE=$(find . -name mapping.txt)
          
          echo "bundle_file=$BUNDLE_FILE" >> $GITHUB_OUTPUT
          echo "mapping_file=$MAPPING_FILE" >> $GITHUB_OUTPUT
      - name: Upload to Google Play
        uses: r0adkll/upload-google-play@v1.1.1
        with:
          serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_PUBLISH_SERVICE_ACCOUNT }}
          packageName: ${{ inputs.GOOGLE_PLAY_APPLICATION_ID }}
          releaseFiles: ${{ steps.artifacts.outputs.bundle_file }}
          track: internal
          status: draft
          whatsNewDirectory: ${{ inputs.GOOGLE_PLAY_WHATSNEW_DIRECTORY }}
          mappingFile: ${{ steps.artifacts.outputs.mapping_file }}
          changesNotSentForReview: ${{ inputs.CHANGES_NOT_SENT_FOR_REVIEW }}